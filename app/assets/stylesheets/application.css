/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

/*This section deals with the overall presentation of the homepage, such as
the 'hero image' (I should look up why they call it that) and the navigation
bar in the top left corner. */
body, html {
  height: 100%;
  background-image: linear-gradient(90deg, #D6EADF, #B8E0D2);
}

/*This is the giant background image that took a very long time to get
functioning properly. It is a picture of a random caf√© in Tuscany, Italy.*/
.tuscany_hero_image {
   background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('tuscan.jpeg');

   height: 50%;

   background-position: center;
   background-repeat: no-repeat;
   background-size: cover;
   position: relative;
}

/*This is the text that goes on top of the giant background image.*/
.tuscany_hero_text {
  text-align: center;
  position: absolute;
  /*text-shadow: 2px 2px gray;*/

  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  color: white;

  font-family: Arial;
  font-size: 24px;
}

/*This is what tells the user how many public articles there are.*/
.article_count {
  margin-left: auto;
  margin-right: auto;
  width: 400px;

  border-radius: 15px;
  background-image: linear-gradient(90deg, transparent, #95B8D1);
  padding: 5px 6px 5px 6px;
  text-align: center;

  font-family: "copperplate";
  font-size: 19px;
  color: #809BCE;
  text-shadow: 1px 1px black;
}
/*margin: auto centers things, from what I can tell. Use it sparingly for now.
Also, don't forget to specify the width! It helps a lot when auto doesn't
quite take care of the job.*/
.article_list {
  margin: auto;
  width: 5%;
  color: purple;
}

.article_list_item {
  /*Coloring this item colors the regular article_list as well, as I just learned.
  Very interesting.*/
  border-radius: 30px;
  padding: 5px 8px 5px 8px;
}

.navigation_header {
  /*background-image: linear-gradient(90deg, transparent, #EA3546);*/
  /*Red color*/
}

.navigation_header::after {
  content: '';
  display: table;
  clear: both;
}

.navigation_bar {
  width: 1000px;
  margin: auto;
  margin-top: 50px;
}

.navigation_main {
  float: center;
}

.navigation_unordered_list {
  /*Position, left and top keep the list in the top-left corner of the screen
  at all times. This way, the list does not sit awkwardly on the page.*/
  position: absolute;
  left: 0px;
  top: 0px;
  margin: 0;
  padding: 0;
  list-style-type: none;
  width: 200px;
  border: 4px solid #809BCE;

  /*I don't actually need these two for now, so I commented them out. They might
  be useful in another application later on.
  position: fixed; Make it stick, even on scroll
  overflow: auto;  Enable scrolling if the sidenav has too much content
  */
}

/*I'd give this a much better, more specific name like its brothers but I
really don't know how to do so at the moment. It will get a somewhat generic
title until I figure something out. */
.navigation_list_item a{
  display: block;

  background-color: #B0F2B4;
  color: black;
  text-align: center;
  border-bottom: 1px solid #fff8dc;
  font-family: fantasy;
}

.navigation_list_item a:hover {
  background-color: #F2E2BA;
  color: black;
}

/*W3 Schools says that 'active' deals with what page the user is on. So, on
the 'Home' page, the 'Home' button would be a different color than all the
other buttons. The problem is that this is not what happens: active just
changes the color of the button when you click on it and do not let go. Perhaps
someone changed the functionality and forgot to update the tutorial? In any
case, I will look up how to actually highlight the page that the user is
currently on.*/
.navigation_list_item a:active {
  background-color: #809BCE;
}
/*END OF OVERALL PRESENTATION SECTION*/





/*The following section of code is for the dropdown menu seen on the homepage,
the one which allows the user to see which public articles are available to
read.*/

/*The main 'div', in which all other elements reside.*/
.article_drop {
  position: relative;
  display: inline-block;

  margin-left: auto;
  margin-right: auto;
}

/*The 'button' (nothing happens when you click on it) which, when hovered over,
shows the list of articles.*/
.article_drop_button {
  background-color: pink;
  color: black;

  padding: 16px;
  min-width: 225px;
  font-size: 16px;

  border: none;


  /*This line right here really serves no purpose because the pointer is the
  default when you hover over the button, but I am keeping it because the
  cursor style is a cool feature in my opinion.*/
  cursor: pointer;
}

/*What the user will end up seeing once the button is hovered over. Note that
the display is set to "none", so what you do here will not be seen until you
hover over the button.*/
.article_drop_content {
  display: none;
  position: absolute;
  background-color: #FFE45E;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2); /*That last value is for
  opacity.*/
  z-index: 1; /*Reminder that z-index tells you how things 'stack'. z: 2 will
  be on top of z:0, and z:1 will be under z:2 but on top of z:1 should they
  all be 'competing' for the same spot.*/
}

/*Apparently, you have to specifically tell CSS not to put bullets on the li's
rather than just applying such a style to the container itself. Very strange.*/
.article_drop_content li {
  list-style-type: none;
  text-align: left;
  min-width: 160px;
}

/*The links to each of the articles.*/
.article_drop_content a {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
}

/*The behavior of the links to the articles once you hover over the button.*/
.article_drop_content a:hover {
  background-color: #DFBA00;
}

.article_drop:hover .article_drop_content {
  display: block;
}

/*Changes the color of the button once the user hovers over it.*/
.article_drop:hover .article_drop_button {
  background-color: #ffafcc;
}

/*END OF DROPDOWN MENU SECTION*/




/*This section of code is for what a user sees once an article is selected. In
particular, the elements defined belong to the file 'show.html.erb'.*/

/*Yes, this code was recycled from 'tuscany_hero_image'. It will stay this way
and violate the DRY protocol until I can figure out how you can copy attributes
from one element to another with fewer lines of code.*/
.garden_hero_image {
  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('courtyard.jpeg');

  height: 52%;
  width: 100%;

  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
}

/*This code is also copy-pasted from above.*/
.garden_hero_text {
  text-align: center;
  position: absolute;
  /*text-shadow: 2px 2px gray;*/

  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  color: white;

  font-family: Arial;
  font-size: 24px;
}

/*This element controls what the actual contents of the article look like.
Unlike its parents, this here code is not copy-pasted and had to be created
from scratch.*/
.article_body {
  background-color: rgb(88, 112, 99, 0.5); /*Give it a shadowed look, so that it appears to be that
  a hole was cut into the background where the text itself sits.*/

  border: 2px solid black;
  box-shadow: 5px 10px;
  padding: 2px;
}

/*As one may guess, this element controls the style of the buttons which let you
edit or destroy the visible article. What's strange is that if you name
something with dashes, Atom will not keep it in the list of words that will
autocomplete (words that you specifically made; things like box-shadow still
appear). So, the original name of this element was edit-and-destroy_buttons,
which would have been more grammatically correct, but a renaming was due because
it could potentially save me a lot of typing. With work such as this, that's
a huge blessing.*/
.edit_and_destroy_buttons li {
  /*From now on, don't forget that in order for the following line of code to
  apply, you need to specify that 'li' is what is being referred to. Otherwise,
  nothing happens.*/
  list-style-type: none;

  display: inline-block;

  padding: 0px 16px;
  border: 2px solid black;
  box-shadow: 3px 6px;

  background-color: #B8E0D2;

}

/*The actual 'links' on the buttons.*/
.edit_and_destroy_buttons a {
  /*Keep in mind that in order to take off the underlines on the links, you need
  to specifically style the links, not the 'li' itself. Doing so will result in
  absolutely nothing happening since the 'li' is not text, the 'a' is. I'd much
  prefer that this element didn't exist and that I could just stick with 'li',
  but there really isn't a thing I can do about it.*/
  text-decoration: none;
  font-family: fantasy;
}

.comment_item {

  /*First off, it wasn't an offer. It's my position. 25%.*/
  width: 35%;

  /*These next two lines give the text an outline. I implemented this so that
  you can see the text of the comments on the background that I chose.*/
  color: white;

  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;

  padding: 8px;


}

.comment_item p {
  display: inline-block;

  padding: 0px 16px;
  border: 2px solid black;
  box-shadow: 3px 6px black;
  padding: 5px;

  background-image: url("https://thumbs.dreamstime.com/b/seamless-blue-white-checkerboard-pattern-illustration-abstract-art-design-background-225596571.jpg");
}

/*This just controls the 'Destroy Comment' button.*/
.comment_item a {
  color: red;
}

/*END OF ARTICLE PRESENTATION SECTION*/
